version: '3.8'

services:
  mysql_nest:
    image: mysql:8.0
    container_name: mysql_db_nest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - '3308:3306'
    volumes:
      - ${VOLUME_MYSQL}:/var/lib/mysql
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    ports:
      - "3100:3000"
    depends_on:
      - mysql_nest
    volumes:
      - ${VOLUME_GRAFANA}:/var/lib/grafana
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      interval: 10s
      timeout: 5s
      retries: 5


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - ${VOLUME_PROMETHEUS}:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - api

  api:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: envoy_api
    restart: always
    ports:
      - "3000:3000"  #Porta da API
    depends_on:
      - mysql_nest
      - redis
    environment:
      DB_DOCKER_HOST: mysql_nest
      DB_DOCKER_PORT: 3306
      DB_DOCKER_USERNAME: ${DB_USER}
      DB_DOCKER_PASSWORD: ${DB_PASSWORD}
      DB_DOCKER_NAME: ${DB_NAME}
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - ../.env:/app/.env # Garante que o .env seja copiado para o container

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"

volumes:
  mysql_data_nest:
  grafana_data:
  prometheus_data: